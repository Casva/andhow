/*
 */
package yarnandtail.andhow.load;

import yarnandtail.andhow.AndHow;
import yarnandtail.andhow.ConfigSamplePrinter;
import yarnandtail.andhow.NamingStrategy;
import yarnandtail.andhow.Property;
import yarnandtail.andhow.PropertyGroup;
import yarnandtail.andhow.TextUtil;

/**
 *
 * @author ericeverman
 */
public class JndiLoaderSamplePrinter extends BaseSamplePrinter implements ConfigSamplePrinter {
	
	@Override
	public String getSampleFileStart() {
		return "<Context>";
	}
	
	@Override
	public String getBlockCommentStart() {
		return "<!--";
	}
	
	@Override
	public String getBlockCommentEnd() {
		return "-->";
	}
	
	@Override
	public String getLineCommentPrefix() {
		return null;
	}
	
	@Override
	public String getSectionHeader() {
		return null;
	}
	
	@Override
	public String getSampleStartIntro() {
		return "Sample properties file generated by " +  AndHow.ANDHOW_NAME + "  " + 
				AndHow.ANDHOW_TAG_LINE + "  -  " + AndHow.ANDHOW_URL;
	}
	
	@Override
	public String getSampleStartDescription() {
		return "This sample uses Tomcat syntax - JNDI configuration for other app containers will be similar but different.";
	}
	
	@Override
	public String getActualProperty(Class<? extends PropertyGroup> group, Property prop) throws Exception {
		
		String propCanonName = NamingStrategy.getUriName(PropertyGroup.getCanonicalName(group, prop));
		String type = prop.getValueType().getDestinationType().getCanonicalName();

		if (prop.getDefaultValue() != null) {
			return TextUtil.format("<Environment name=\"{}\" value=\"{}\" type=\"{}\" override=\"false\"/>", 
					propCanonName, 
					prop.getDefaultValue(),
					type);
		} else {
			return TextUtil.format("<Environment name=\"{}\" value=\"{}\" type=\"[{}]\" override=\"false\"/>", 
					propCanonName, 
					prop.getValueType().getDestinationType().getSimpleName(),
					type);
		}
	}
	
	@Override
	public String getPropertyGroupEnd() {
		return null;
	}

	
	@Override
	public String getSampleFileEnd() {
		return "</Context>";
	}

	
}
